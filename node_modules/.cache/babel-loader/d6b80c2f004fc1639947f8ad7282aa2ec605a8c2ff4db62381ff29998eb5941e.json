{"ast":null,"code":"import React,{useState,useEffect}from'react';import DatePicker from'react-datepicker';import'react-datepicker/dist/react-datepicker.css';import ApiService from'../../service/ApiService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const RoomSearch=_ref=>{let{handleSearchResult}=_ref;const[startDate,setStartDate]=useState(null);const[endDate,setEndDate]=useState(null);const[roomType,setRoomType]=useState('');const[roomTypes,setRoomTypes]=useState([]);const[error,setError]=useState('');useEffect(()=>{const fetchRoomTypes=async()=>{try{const types=await ApiService.getRoomTypes();setRoomTypes(types);}catch(error){console.error('Error fetching room types:',error.message);}};fetchRoomTypes();},[]);/**This methods is going to be used to show errors */const showError=function(message){let timeout=arguments.length>1&&arguments[1]!==undefined?arguments[1]:5000;setError(message);setTimeout(()=>{setError('');},timeout);};/**THis is going to be used to fetch avaailabe rooms from database base on seach data that'll be passed in */const handleInternalSearch=async()=>{if(!startDate||!endDate||!roomType){showError('Please select all fields');return false;}try{// Convert startDate to the desired format\nconst formattedStartDate=startDate?startDate.toISOString().split('T')[0]:null;const formattedEndDate=endDate?endDate.toISOString().split('T')[0]:null;// Call the API to fetch available rooms\nconst response=await ApiService.getAvailableRoomsByDateAndType(formattedStartDate,formattedEndDate,roomType);// Check if the response is successful\nif(response.statusCode===200){if(response.roomList.length===0){showError('Room not currently available for this date range on the selected rom type.');return;}handleSearchResult(response.roomList);setError('');}}catch(error){showError(\"Unown error occured: \"+error.response.data.message);}};return/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"search-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"search-field\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Check-in Date\"}),/*#__PURE__*/_jsx(DatePicker,{selected:startDate,onChange:date=>setStartDate(date),dateFormat:\"dd/MM/yyyy\",placeholderText:\"Select Check-in Date\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"search-field\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Check-out Date\"}),/*#__PURE__*/_jsx(DatePicker,{selected:endDate,onChange:date=>setEndDate(date),dateFormat:\"dd/MM/yyyy\",placeholderText:\"Select Check-out Date\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"search-field\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Room Type\"}),/*#__PURE__*/_jsxs(\"select\",{value:roomType,onChange:e=>setRoomType(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{disabled:true,value:\"\",children:\"Select Room Type\"}),roomTypes.map(roomType=>/*#__PURE__*/_jsx(\"option\",{value:roomType,children:roomType},roomType))]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"home-search-button\",onClick:handleInternalSearch,children:\"Search Rooms\"})]}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error})]});};export default RoomSearch;","map":{"version":3,"names":["React","useState","useEffect","DatePicker","ApiService","jsx","_jsx","jsxs","_jsxs","RoomSearch","_ref","handleSearchResult","startDate","setStartDate","endDate","setEndDate","roomType","setRoomType","roomTypes","setRoomTypes","error","setError","fetchRoomTypes","types","getRoomTypes","console","message","showError","timeout","arguments","length","undefined","setTimeout","handleInternalSearch","formattedStartDate","toISOString","split","formattedEndDate","response","getAvailableRoomsByDateAndType","statusCode","roomList","data","children","className","selected","onChange","date","dateFormat","placeholderText","value","e","target","disabled","map","onClick"],"sources":["/Users/daongoctung/bookinghotel/phegon-hotel-booking-and-management/frontend/src/component/common/RoomSearch.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport ApiService from '../../service/ApiService';\n\nconst RoomSearch = ({ handleSearchResult }) => {\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [roomType, setRoomType] = useState('');\n  const [roomTypes, setRoomTypes] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchRoomTypes = async () => {\n      try {\n        const types = await ApiService.getRoomTypes();\n        setRoomTypes(types);\n      } catch (error) {\n        console.error('Error fetching room types:', error.message);\n      }\n    };\n    fetchRoomTypes();\n  }, []);\n\n  /**This methods is going to be used to show errors */\n  const showError = (message, timeout = 5000) => {\n    setError(message);\n    setTimeout(() => {\n      setError('');\n    }, timeout);\n  };\n\n  /**THis is going to be used to fetch avaailabe rooms from database base on seach data that'll be passed in */\n  const handleInternalSearch = async () => {\n    if (!startDate || !endDate || !roomType) {\n      showError('Please select all fields');\n      return false;\n    }\n    try {\n      // Convert startDate to the desired format\n      const formattedStartDate = startDate ? startDate.toISOString().split('T')[0] : null;\n      const formattedEndDate = endDate ? endDate.toISOString().split('T')[0] : null;\n      // Call the API to fetch available rooms\n      const response = await ApiService.getAvailableRoomsByDateAndType(formattedStartDate, formattedEndDate, roomType);\n\n      // Check if the response is successful\n      if (response.statusCode === 200) {\n        if (response.roomList.length === 0) {\n          showError('Room not currently available for this date range on the selected rom type.');\n          return\n        }\n        handleSearchResult(response.roomList);\n        setError('');\n      }\n    } catch (error) {\n      showError(\"Unown error occured: \" + error.response.data.message);\n    }\n  };\n\n  return (\n    <section>\n      <div className=\"search-container\">\n        <div className=\"search-field\">\n          <label>Check-in Date</label>\n          <DatePicker\n            selected={startDate}\n            onChange={(date) => setStartDate(date)}\n            dateFormat=\"dd/MM/yyyy\"\n            placeholderText=\"Select Check-in Date\"\n          />\n        </div>\n        <div className=\"search-field\">\n          <label>Check-out Date</label>\n          <DatePicker\n            selected={endDate}\n            onChange={(date) => setEndDate(date)}\n            dateFormat=\"dd/MM/yyyy\"\n            placeholderText=\"Select Check-out Date\"\n          />\n        </div>\n\n        <div className=\"search-field\">\n          <label>Room Type</label>\n          <select value={roomType} onChange={(e) => setRoomType(e.target.value)}>\n            <option disabled value=\"\">\n              Select Room Type\n            </option>\n            {roomTypes.map((roomType) => (\n              <option key={roomType} value={roomType}>\n                {roomType}\n              </option>\n            ))}\n          </select>\n        </div>\n        <button className=\"home-search-button\" onClick={handleInternalSearch}>\n          Search Rooms\n        </button>\n      </div>\n      {error && <p className=\"error-message\">{error}</p>}\n    </section>\n  );\n};\n\nexport default RoomSearch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}