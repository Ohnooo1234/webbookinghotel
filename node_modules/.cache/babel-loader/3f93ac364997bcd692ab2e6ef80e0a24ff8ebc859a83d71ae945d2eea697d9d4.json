{"ast":null,"code":"var _jsxFileName = \"/Users/daongoctung/bookinghotel/phegon-hotel-booking-and-management/frontend/src/component/common/RoomSearch.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport ApiService from '../../service/ApiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoomSearch = ({\n  handleSearchResult\n}) => {\n  _s();\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [roomType, setRoomType] = useState('');\n  // const [roomTypes, setRoomTypes] = useState([]);\n  const roomTypes = [\"Single\", \"Double\", \"Suite\"];\n  const [error, setError] = useState('');\n\n  // useEffect(() => {\n  //   const fetchRoomTypes = async () => {\n  //     try {\n  //       const types = await ApiService.getRoomTypes();\n  //       setRoomTypes(types);\n  //     } catch (error) {\n  //       console.error('Error fetching room types:', error.message);\n  //     }\n  //   };\n  //   fetchRoomTypes();\n  // }, []);\n\n  /**This methods is going to be used to show errors */\n  const showError = (message, timeout = 5000) => {\n    setError(message);\n    setTimeout(() => {\n      setError('');\n    }, timeout);\n  };\n\n  /**THis is going to be used to fetch avaailabe rooms from database base on seach data that'll be passed in */\n  const handleInternalSearch = async () => {\n    if (!startDate || !endDate || !roomType) {\n      showError('Please select all fields');\n      return false;\n    } else {\n      showError('Thank you when you search room but not have D ');\n    }\n    // try {\n    //   // Convert startDate to the desired format\n    //   const formattedStartDate = startDate ? startDate.toISOString().split('T')[0] : null;\n    //   const formattedEndDate = endDate ? endDate.toISOString().split('T')[0] : null;\n    //   // Call the API to fetch available rooms\n    //   const response = await ApiService.getAvailableRoomsByDateAndType(formattedStartDate, formattedEndDate, roomType);\n\n    //   // Check if the response is successful\n    //   if (response.statusCode === 200) {\n    //     if (response.roomList.length === 0) {\n    //       showError('Room not currently available for this date range on the selected rom type.');\n    //       return\n    //     }\n    //     handleSearchResult(response.roomList);\n    //     setError('');\n    //   }\n    // } catch (error) {\n    //   showError(\"Unown error occured: \" + error.response.data.message);\n    // }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Check-in Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: startDate,\n          onChange: date => setStartDate(date),\n          dateFormat: \"dd/MM/yyyy\",\n          placeholderText: \"Select Check-in Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Check-out Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: endDate,\n          onChange: date => setEndDate(date),\n          dateFormat: \"dd/MM/yyyy\",\n          placeholderText: \"Select Check-out Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Room Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: roomType,\n          onChange: e => setRoomType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            disabled: true,\n            value: \"\",\n            children: \"Select Room Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 9\n          }, this), roomTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: type,\n            children: type\n          }, type, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }, this), roomType && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"You have selected: \", roomType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"home-search-button\",\n        onClick: handleInternalSearch,\n        children: \"Search Rooms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomSearch, \"bfSOVmPoLyFurHi8HOpcRjPKDzo=\");\n_c = RoomSearch;\nexport default RoomSearch;\nvar _c;\n$RefreshReg$(_c, \"RoomSearch\");","map":{"version":3,"names":["React","useState","useEffect","DatePicker","ApiService","jsxDEV","_jsxDEV","RoomSearch","handleSearchResult","_s","startDate","setStartDate","endDate","setEndDate","roomType","setRoomType","roomTypes","error","setError","showError","message","timeout","setTimeout","handleInternalSearch","children","className","fileName","_jsxFileName","lineNumber","columnNumber","selected","onChange","date","dateFormat","placeholderText","value","e","target","disabled","map","type","onClick","_c","$RefreshReg$"],"sources":["/Users/daongoctung/bookinghotel/phegon-hotel-booking-and-management/frontend/src/component/common/RoomSearch.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport ApiService from '../../service/ApiService';\n\nconst RoomSearch = ({ handleSearchResult }) => {\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [roomType, setRoomType] = useState('');\n  // const [roomTypes, setRoomTypes] = useState([]);\n  const roomTypes = [\"Single\", \"Double\", \"Suite\"];\n  const [error, setError] = useState('');\n\n  // useEffect(() => {\n  //   const fetchRoomTypes = async () => {\n  //     try {\n  //       const types = await ApiService.getRoomTypes();\n  //       setRoomTypes(types);\n  //     } catch (error) {\n  //       console.error('Error fetching room types:', error.message);\n  //     }\n  //   };\n  //   fetchRoomTypes();\n  // }, []);\n\n  /**This methods is going to be used to show errors */\n  const showError = (message, timeout = 5000) => {\n    setError(message);\n    setTimeout(() => {\n      setError('');\n    }, timeout);\n  };\n\n  /**THis is going to be used to fetch avaailabe rooms from database base on seach data that'll be passed in */\n  const handleInternalSearch = async () => {\n    if (!startDate || !endDate || !roomType) {\n      showError('Please select all fields');\n      return false;\n    }\n    else {\n      showError('Thank you when you search room but not have D ');\n    }\n    // try {\n    //   // Convert startDate to the desired format\n    //   const formattedStartDate = startDate ? startDate.toISOString().split('T')[0] : null;\n    //   const formattedEndDate = endDate ? endDate.toISOString().split('T')[0] : null;\n    //   // Call the API to fetch available rooms\n    //   const response = await ApiService.getAvailableRoomsByDateAndType(formattedStartDate, formattedEndDate, roomType);\n\n    //   // Check if the response is successful\n    //   if (response.statusCode === 200) {\n    //     if (response.roomList.length === 0) {\n    //       showError('Room not currently available for this date range on the selected rom type.');\n    //       return\n    //     }\n    //     handleSearchResult(response.roomList);\n    //     setError('');\n    //   }\n    // } catch (error) {\n    //   showError(\"Unown error occured: \" + error.response.data.message);\n    // }\n  };\n\n  return (\n    <section>\n      <div className=\"search-container\">\n        <div className=\"search-field\">\n          <label>Check-in Date</label>\n          <DatePicker\n            selected={startDate}\n            onChange={(date) => setStartDate(date)}\n            dateFormat=\"dd/MM/yyyy\"\n            placeholderText=\"Select Check-in Date\"\n          />\n        </div>\n        <div className=\"search-field\">\n          <label>Check-out Date</label>\n          <DatePicker\n            selected={endDate}\n            onChange={(date) => setEndDate(date)}\n            dateFormat=\"dd/MM/yyyy\"\n            placeholderText=\"Select Check-out Date\"\n          />\n        </div>\n\n        {/* <div className=\"search-field\">\n          <label>Room Type</label>\n          <select value={roomType} onChange={(e) => setRoomType(e.target.value)}>\n            <option disabled value=\"\">\n              Select Room Type\n            </option>\n            {roomTypes.map((roomType) => (\n              <option key={roomType} value={roomType}>\n                {roomType}\n              </option>\n            ))}\n          </select>\n        </div> */}\n\n        <div className=\"search-field\">\n      <label>Room Type</label>\n      <select value={roomType} onChange={(e) => setRoomType(e.target.value)}>\n        <option disabled value=\"\">\n          Select Room Type\n        </option>\n        {roomTypes.map((type) => (\n          <option key={type} value={type}>\n            {type}\n          </option>\n        ))}\n      </select>\n\n      {/* Hiển thị loại phòng đã chọn */}\n      {roomType && <p>You have selected: {roomType}</p>}\n    </div>\n        <button className=\"home-search-button\" onClick={handleInternalSearch}>\n          Search Rooms\n        </button>\n      </div>\n      {error && <p className=\"error-message\">{error}</p>}\n    </section>\n  );\n};\n\nexport default RoomSearch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}