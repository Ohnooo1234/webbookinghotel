{"ast":null,"code":"var _jsxFileName = \"/Users/daongoctung/bookinghotel/phegon-hotel-booking-and-management/frontend/src/component/booking_rooms/AllRoomsPage.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import React, { useState, useEffect } from 'react';\n// import ApiService from '../../service/ApiService';\n// import Pagination from '../common/Pagination';\n// import RoomResult from '../common/RoomResult';\n// import RoomSearch from '../common/RoomSearch';\n\nconst AllRoomsPage = () => {\n  // const [rooms, setRooms] = useState([]);\n  // const [filteredRooms, setFilteredRooms] = useState([]);\n  // const [roomTypes, setRoomTypes] = useState([]);\n  // const [selectedRoomType, setSelectedRoomType] = useState('');\n  // const [currentPage, setCurrentPage] = useState(1);\n  // const [roomsPerPage] = useState(5);\n\n  // // Function to handle search results\n  // const handleSearchResult = (results) => {\n  //   setRooms(results);\n  //   setFilteredRooms(results);\n  // };\n\n  // useEffect(() => {\n  //   const fetchRooms = async () => {\n  //     try {\n  //       const response = await ApiService.getAllRooms();\n  //       const allRooms = response.roomList;\n  //       setRooms(allRooms);\n  //       setFilteredRooms(allRooms);\n  //     } catch (error) {\n  //       console.error('Error fetching rooms:', error.message);\n  //     }\n  //   };\n\n  //   const fetchRoomTypes = async () => {\n  //     try {\n  //       const types = await ApiService.getRoomTypes();\n  //       setRoomTypes(types);\n  //     } catch (error) {\n  //       console.error('Error fetching room types:', error.message);\n  //     }\n  //   };\n\n  //   fetchRooms();\n  //   fetchRoomTypes();\n  // }, []);\n\n  // const handleRoomTypeChange = (e) => {\n  //   setSelectedRoomType(e.target.value);\n  //   filterRooms(e.target.value);\n  // };\n\n  // const filterRooms = (type) => {\n  //   if (type === '') {\n  //     setFilteredRooms(rooms);\n  //   } else {\n  //     const filtered = rooms.filter((room) => room.roomType === type);\n  //     setFilteredRooms(filtered);\n  //   }\n  //   setCurrentPage(1); // Reset to first page after filtering\n  // };\n\n  // // Pagination\n  // const indexOfLastRoom = currentPage * roomsPerPage;\n  // const indexOfFirstRoom = indexOfLastRoom - roomsPerPage;\n  // const currentRooms = filteredRooms.slice(indexOfFirstRoom, indexOfLastRoom);\n\n  // // Change page\n  // const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  // return (\n  //   <div className='all-rooms'>\n  //     <h2>All Rooms</h2>\n  //     <div className='all-room-filter-div'>\n  //       <label>Filter by Room Type:</label>\n  //       <select value={selectedRoomType} onChange={handleRoomTypeChange}>\n  //         <option value=\"\">All</option>\n  //         {roomTypes.map((type) => (\n  //           <option key={type} value={type}>\n  //             {type}\n  //           </option>\n  //         ))}\n  //       </select>\n  //     </div>\n\n  //     <RoomSearch handleSearchResult={handleSearchResult} />\n  //     <RoomResult roomSearchResults={currentRooms} />\n\n  //     <Pagination\n  //       roomsPerPage={roomsPerPage}\n  //       totalRooms={filteredRooms.length}\n  //       currentPage={currentPage}\n  //       paginate={paginate}\n  //     />\n  //   </div>\n  // );\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-rooms\",\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Rooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 3\n  }, this);\n};\n_c = AllRoomsPage;\nexport default AllRoomsPage;\nvar _c;\n$RefreshReg$(_c, \"AllRoomsPage\");","map":{"version":3,"names":["AllRoomsPage","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/daongoctung/bookinghotel/phegon-hotel-booking-and-management/frontend/src/component/booking_rooms/AllRoomsPage.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import ApiService from '../../service/ApiService';\n// import Pagination from '../common/Pagination';\n// import RoomResult from '../common/RoomResult';\n// import RoomSearch from '../common/RoomSearch';\n\n\n\nconst AllRoomsPage = () => {\n  // const [rooms, setRooms] = useState([]);\n  // const [filteredRooms, setFilteredRooms] = useState([]);\n  // const [roomTypes, setRoomTypes] = useState([]);\n  // const [selectedRoomType, setSelectedRoomType] = useState('');\n  // const [currentPage, setCurrentPage] = useState(1);\n  // const [roomsPerPage] = useState(5);\n\n  // // Function to handle search results\n  // const handleSearchResult = (results) => {\n  //   setRooms(results);\n  //   setFilteredRooms(results);\n  // };\n\n\n  // useEffect(() => {\n  //   const fetchRooms = async () => {\n  //     try {\n  //       const response = await ApiService.getAllRooms();\n  //       const allRooms = response.roomList;\n  //       setRooms(allRooms);\n  //       setFilteredRooms(allRooms);\n  //     } catch (error) {\n  //       console.error('Error fetching rooms:', error.message);\n  //     }\n  //   };\n\n  //   const fetchRoomTypes = async () => {\n  //     try {\n  //       const types = await ApiService.getRoomTypes();\n  //       setRoomTypes(types);\n  //     } catch (error) {\n  //       console.error('Error fetching room types:', error.message);\n  //     }\n  //   };\n\n  //   fetchRooms();\n  //   fetchRoomTypes();\n  // }, []);\n\n  // const handleRoomTypeChange = (e) => {\n  //   setSelectedRoomType(e.target.value);\n  //   filterRooms(e.target.value);\n  // };\n\n  // const filterRooms = (type) => {\n  //   if (type === '') {\n  //     setFilteredRooms(rooms);\n  //   } else {\n  //     const filtered = rooms.filter((room) => room.roomType === type);\n  //     setFilteredRooms(filtered);\n  //   }\n  //   setCurrentPage(1); // Reset to first page after filtering\n  // };\n\n  // // Pagination\n  // const indexOfLastRoom = currentPage * roomsPerPage;\n  // const indexOfFirstRoom = indexOfLastRoom - roomsPerPage;\n  // const currentRooms = filteredRooms.slice(indexOfFirstRoom, indexOfLastRoom);\n\n  // // Change page\n  // const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  // return (\n  //   <div className='all-rooms'>\n  //     <h2>All Rooms</h2>\n  //     <div className='all-room-filter-div'>\n  //       <label>Filter by Room Type:</label>\n  //       <select value={selectedRoomType} onChange={handleRoomTypeChange}>\n  //         <option value=\"\">All</option>\n  //         {roomTypes.map((type) => (\n  //           <option key={type} value={type}>\n  //             {type}\n  //           </option>\n  //         ))}\n  //       </select>\n  //     </div>\n      \n  //     <RoomSearch handleSearchResult={handleSearchResult} />\n  //     <RoomResult roomSearchResults={currentRooms} />\n\n  //     <Pagination\n  //       roomsPerPage={roomsPerPage}\n  //       totalRooms={filteredRooms.length}\n  //       currentPage={currentPage}\n  //       paginate={paginate}\n  //     />\n  //   </div>\n  // );\n   return (\n  <div className='all-rooms'>\n      <h2>All Rooms</h2>\n  </div>\n   \n   );\n};\n\nexport default AllRoomsPage;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAIA,MAAMA,YAAY,GAAGA,CAAA,KAAM;EACzB;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACC,oBACDC,OAAA;IAAKC,SAAS,EAAC,WAAW;IAAAC,QAAA,eACtBF,OAAA;MAAAE,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAGR,CAAC;AAACC,EAAA,GA/FIR,YAAY;AAiGlB,eAAeA,YAAY;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}