{"ast":null,"code":"var _jsxFileName = \"/Users/daongoctung/bookinghotel/phegon-hotel-booking-and-management/frontend/src/component/auth/RegisterPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegisterPage() {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    phoneNumber: ''\n  });\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const validateForm = () => {\n    const {\n      name,\n      email,\n      password,\n      phoneNumber\n    } = formData;\n    return name && email && password && phoneNumber;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      setErrorMessage('Please fill all the fields.');\n      setTimeout(() => setErrorMessage(''), 5000);\n      return;\n    }\n\n    // Simulate a registration process\n    const mockDatabase = JSON.parse(localStorage.getItem('users')) || [];\n\n    // Check if the user already exists\n    const userExists = mockDatabase.some(user => user.email === formData.email);\n    if (userExists) {\n      setErrorMessage('Email is already registered.');\n      setTimeout(() => setErrorMessage(''), 5000);\n      return;\n    }\n\n    // Simulating user registration\n    mockDatabase.push(formData);\n    localStorage.setItem('users', JSON.stringify(mockDatabase));\n\n    // Clear the form fields after successful registration\n    setFormData({\n      name: '',\n      email: '',\n      password: '',\n      phoneNumber: ''\n    });\n    setSuccessMessage('User registered successfully');\n    setTimeout(() => {\n      setSuccessMessage('');\n      navigate('/'); // Redirect to homepage or another route\n    }, 3000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: [errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 30\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-message\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Phone Number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"phoneNumber\",\n          value: formData.phoneNumber,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"register-link\",\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/login\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(RegisterPage, \"SEEP/EDXdSwIAMCRRx7h+uoF6w4=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","RegisterPage","_s","navigate","formData","setFormData","name","email","password","phoneNumber","errorMessage","setErrorMessage","successMessage","setSuccessMessage","handleInputChange","e","value","target","validateForm","handleSubmit","preventDefault","setTimeout","mockDatabase","JSON","parse","localStorage","getItem","userExists","some","user","push","setItem","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","href","_c","$RefreshReg$"],"sources":["/Users/daongoctung/bookinghotel/phegon-hotel-booking-and-management/frontend/src/component/auth/RegisterPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction RegisterPage() {\n    const navigate = useNavigate();\n\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        password: '',\n        phoneNumber: ''\n    });\n\n    const [errorMessage, setErrorMessage] = useState('');\n    const [successMessage, setSuccessMessage] = useState('');\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({ ...formData, [name]: value });\n    };\n\n    const validateForm = () => {\n        const { name, email, password, phoneNumber } = formData;\n        return name && email && password && phoneNumber;\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        \n        if (!validateForm()) {\n            setErrorMessage('Please fill all the fields.');\n            setTimeout(() => setErrorMessage(''), 5000);\n            return;\n        }\n\n        // Simulate a registration process\n        const mockDatabase = JSON.parse(localStorage.getItem('users')) || [];\n        \n        // Check if the user already exists\n        const userExists = mockDatabase.some(user => user.email === formData.email);\n        if (userExists) {\n            setErrorMessage('Email is already registered.');\n            setTimeout(() => setErrorMessage(''), 5000);\n            return;\n        }\n\n        // Simulating user registration\n        mockDatabase.push(formData);\n        localStorage.setItem('users', JSON.stringify(mockDatabase));\n\n        // Clear the form fields after successful registration\n        setFormData({\n            name: '',\n            email: '',\n            password: '',\n            phoneNumber: ''\n        });\n        setSuccessMessage('User registered successfully');\n        setTimeout(() => {\n            setSuccessMessage('');\n            navigate('/'); // Redirect to homepage or another route\n        }, 3000);\n    };\n\n    return (\n        <div className=\"auth-container\">\n            {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n            {successMessage && <p className=\"success-message\">{successMessage}</p>}\n            <h2>Sign Up</h2>\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <label>Name:</label>\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        value={formData.name}\n                        onChange={handleInputChange}\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label>Email:</label>\n                    <input\n                        type=\"email\"\n                        name=\"email\"\n                        value={formData.email}\n                        onChange={handleInputChange}\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label>Phone Number:</label>\n                    <input\n                        type=\"text\"\n                        name=\"phoneNumber\"\n                        value={formData.phoneNumber}\n                        onChange={handleInputChange}\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label>Password:</label>\n                    <input\n                        type=\"password\"\n                        name=\"password\"\n                        value={formData.password}\n                        onChange={handleInputChange}\n                        required\n                    />\n                </div>\n                <button type=\"submit\">Register</button>\n            </form>\n            <p className=\"register-link\">\n                Already have an account? <a href=\"/login\">Login</a>\n            </p>\n        </div>\n    );\n}\n\nexport default RegisterPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IACrCS,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,WAAW,EAAE;EACjB,CAAC,CAAC;EAEF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMiB,iBAAiB,GAAIC,CAAC,IAAK;IAC7B,MAAM;MAAET,IAAI;MAAEU;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChCZ,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACE,IAAI,GAAGU;IAAM,CAAC,CAAC;EAC/C,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACvB,MAAM;MAAEZ,IAAI;MAAEC,KAAK;MAAEC,QAAQ;MAAEC;IAAY,CAAC,GAAGL,QAAQ;IACvD,OAAOE,IAAI,IAAIC,KAAK,IAAIC,QAAQ,IAAIC,WAAW;EACnD,CAAC;EAED,MAAMU,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAC9BA,CAAC,CAACK,cAAc,CAAC,CAAC;IAElB,IAAI,CAACF,YAAY,CAAC,CAAC,EAAE;MACjBP,eAAe,CAAC,6BAA6B,CAAC;MAC9CU,UAAU,CAAC,MAAMV,eAAe,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;MAC3C;IACJ;;IAEA;IACA,MAAMW,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE;;IAEpE;IACA,MAAMC,UAAU,GAAGL,YAAY,CAACM,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACtB,KAAK,KAAKH,QAAQ,CAACG,KAAK,CAAC;IAC3E,IAAIoB,UAAU,EAAE;MACZhB,eAAe,CAAC,8BAA8B,CAAC;MAC/CU,UAAU,CAAC,MAAMV,eAAe,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;MAC3C;IACJ;;IAEA;IACAW,YAAY,CAACQ,IAAI,CAAC1B,QAAQ,CAAC;IAC3BqB,YAAY,CAACM,OAAO,CAAC,OAAO,EAAER,IAAI,CAACS,SAAS,CAACV,YAAY,CAAC,CAAC;;IAE3D;IACAjB,WAAW,CAAC;MACRC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,WAAW,EAAE;IACjB,CAAC,CAAC;IACFI,iBAAiB,CAAC,8BAA8B,CAAC;IACjDQ,UAAU,CAAC,MAAM;MACbR,iBAAiB,CAAC,EAAE,CAAC;MACrBV,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IACnB,CAAC,EAAE,IAAI,CAAC;EACZ,CAAC;EAED,oBACIH,OAAA;IAAKiC,SAAS,EAAC,gBAAgB;IAAAC,QAAA,GAC1BxB,YAAY,iBAAIV,OAAA;MAAGiC,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAExB;IAAY;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC/D1B,cAAc,iBAAIZ,OAAA;MAAGiC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAEtB;IAAc;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtEtC,OAAA;MAAAkC,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBtC,OAAA;MAAMuC,QAAQ,EAAEpB,YAAa;MAAAe,QAAA,gBACzBlC,OAAA;QAAKiC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACvBlC,OAAA;UAAAkC,QAAA,EAAO;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpBtC,OAAA;UACIwC,IAAI,EAAC,MAAM;UACXlC,IAAI,EAAC,MAAM;UACXU,KAAK,EAAEZ,QAAQ,CAACE,IAAK;UACrBmC,QAAQ,EAAE3B,iBAAkB;UAC5B4B,QAAQ;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNtC,OAAA;QAAKiC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACvBlC,OAAA;UAAAkC,QAAA,EAAO;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrBtC,OAAA;UACIwC,IAAI,EAAC,OAAO;UACZlC,IAAI,EAAC,OAAO;UACZU,KAAK,EAAEZ,QAAQ,CAACG,KAAM;UACtBkC,QAAQ,EAAE3B,iBAAkB;UAC5B4B,QAAQ;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNtC,OAAA;QAAKiC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACvBlC,OAAA;UAAAkC,QAAA,EAAO;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC5BtC,OAAA;UACIwC,IAAI,EAAC,MAAM;UACXlC,IAAI,EAAC,aAAa;UAClBU,KAAK,EAAEZ,QAAQ,CAACK,WAAY;UAC5BgC,QAAQ,EAAE3B,iBAAkB;UAC5B4B,QAAQ;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNtC,OAAA;QAAKiC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACvBlC,OAAA;UAAAkC,QAAA,EAAO;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxBtC,OAAA;UACIwC,IAAI,EAAC,UAAU;UACflC,IAAI,EAAC,UAAU;UACfU,KAAK,EAAEZ,QAAQ,CAACI,QAAS;UACzBiC,QAAQ,EAAE3B,iBAAkB;UAC5B4B,QAAQ;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNtC,OAAA;QAAQwC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eACPtC,OAAA;MAAGiC,SAAS,EAAC,eAAe;MAAAC,QAAA,GAAC,2BACA,eAAAlC,OAAA;QAAG2C,IAAI,EAAC,QAAQ;QAAAT,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEd;AAACpC,EAAA,CAlHQD,YAAY;EAAA,QACAH,WAAW;AAAA;AAAA8C,EAAA,GADvB3C,YAAY;AAoHrB,eAAeA,YAAY;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}