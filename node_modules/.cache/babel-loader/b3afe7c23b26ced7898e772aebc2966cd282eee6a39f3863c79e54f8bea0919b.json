{"ast":null,"code":"import React,{useState,useEffect}from'react';import ApiService from'../../service/ApiService';import Pagination from'../common/Pagination';import RoomResult from'../common/RoomResult';import RoomSearch from'../common/RoomSearch';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AllRoomsPage=()=>{const[rooms,setRooms]=useState([]);const[filteredRooms,setFilteredRooms]=useState([]);const[roomTypes,setRoomTypes]=useState([]);const[selectedRoomType,setSelectedRoomType]=useState('');const[currentPage,setCurrentPage]=useState(1);const[roomsPerPage]=useState(5);// Function to handle search results\nconst handleSearchResult=results=>{setRooms(results);setFilteredRooms(results);};useEffect(()=>{const fetchRooms=async()=>{try{const response=await ApiService.getAllRooms();const allRooms=response.roomList;setRooms(allRooms);setFilteredRooms(allRooms);}catch(error){console.error('Error fetching rooms:',error.message);}};const fetchRoomTypes=async()=>{try{const types=await ApiService.getRoomTypes();setRoomTypes(types);}catch(error){console.error('Error fetching room types:',error.message);}};fetchRooms();fetchRoomTypes();},[]);const handleRoomTypeChange=e=>{setSelectedRoomType(e.target.value);filterRooms(e.target.value);};const filterRooms=type=>{if(type===''){setFilteredRooms(rooms);}else{const filtered=rooms.filter(room=>room.roomType===type);setFilteredRooms(filtered);}setCurrentPage(1);// Reset to first page after filtering\n};// Pagination\nconst indexOfLastRoom=currentPage*roomsPerPage;const indexOfFirstRoom=indexOfLastRoom-roomsPerPage;const currentRooms=filteredRooms.slice(indexOfFirstRoom,indexOfLastRoom);// Change page\nconst paginate=pageNumber=>setCurrentPage(pageNumber);return/*#__PURE__*/_jsxs(\"div\",{className:\"all-rooms\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"All Rooms\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"all-room-filter-div\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Filter by Room Type:\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedRoomType,onChange:handleRoomTypeChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All\"}),roomTypes.map(type=>/*#__PURE__*/_jsx(\"option\",{value:type,children:type},type))]})]}),/*#__PURE__*/_jsx(RoomSearch,{handleSearchResult:handleSearchResult}),/*#__PURE__*/_jsx(RoomResult,{roomSearchResults:currentRooms}),/*#__PURE__*/_jsx(Pagination,{roomsPerPage:roomsPerPage,totalRooms:filteredRooms.length,currentPage:currentPage,paginate:paginate})]});};export default AllRoomsPage;","map":{"version":3,"names":["React","useState","useEffect","ApiService","Pagination","RoomResult","RoomSearch","jsx","_jsx","jsxs","_jsxs","AllRoomsPage","rooms","setRooms","filteredRooms","setFilteredRooms","roomTypes","setRoomTypes","selectedRoomType","setSelectedRoomType","currentPage","setCurrentPage","roomsPerPage","handleSearchResult","results","fetchRooms","response","getAllRooms","allRooms","roomList","error","console","message","fetchRoomTypes","types","getRoomTypes","handleRoomTypeChange","e","target","value","filterRooms","type","filtered","filter","room","roomType","indexOfLastRoom","indexOfFirstRoom","currentRooms","slice","paginate","pageNumber","className","children","onChange","map","roomSearchResults","totalRooms","length"],"sources":["/Users/daongoctung/bookinghotel/phegon-hotel-booking-and-management/frontend/src/component/booking_rooms/AllRoomsPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ApiService from '../../service/ApiService';\nimport Pagination from '../common/Pagination';\nimport RoomResult from '../common/RoomResult';\nimport RoomSearch from '../common/RoomSearch';\n\n\n\nconst AllRoomsPage = () => {\n  const [rooms, setRooms] = useState([]);\n  const [filteredRooms, setFilteredRooms] = useState([]);\n  const [roomTypes, setRoomTypes] = useState([]);\n  const [selectedRoomType, setSelectedRoomType] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [roomsPerPage] = useState(5);\n\n  // Function to handle search results\n  const handleSearchResult = (results) => {\n    setRooms(results);\n    setFilteredRooms(results);\n  };\n\n\n  useEffect(() => {\n    const fetchRooms = async () => {\n      try {\n        const response = await ApiService.getAllRooms();\n        const allRooms = response.roomList;\n        setRooms(allRooms);\n        setFilteredRooms(allRooms);\n      } catch (error) {\n        console.error('Error fetching rooms:', error.message);\n      }\n    };\n\n    const fetchRoomTypes = async () => {\n      try {\n        const types = await ApiService.getRoomTypes();\n        setRoomTypes(types);\n      } catch (error) {\n        console.error('Error fetching room types:', error.message);\n      }\n    };\n\n    fetchRooms();\n    fetchRoomTypes();\n  }, []);\n\n  const handleRoomTypeChange = (e) => {\n    setSelectedRoomType(e.target.value);\n    filterRooms(e.target.value);\n  };\n\n  const filterRooms = (type) => {\n    if (type === '') {\n      setFilteredRooms(rooms);\n    } else {\n      const filtered = rooms.filter((room) => room.roomType === type);\n      setFilteredRooms(filtered);\n    }\n    setCurrentPage(1); // Reset to first page after filtering\n  };\n\n  // Pagination\n  const indexOfLastRoom = currentPage * roomsPerPage;\n  const indexOfFirstRoom = indexOfLastRoom - roomsPerPage;\n  const currentRooms = filteredRooms.slice(indexOfFirstRoom, indexOfLastRoom);\n\n  // Change page\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  return (\n    <div className='all-rooms'>\n      <h2>All Rooms</h2>\n      <div className='all-room-filter-div'>\n        <label>Filter by Room Type:</label>\n        <select value={selectedRoomType} onChange={handleRoomTypeChange}>\n          <option value=\"\">All</option>\n          {roomTypes.map((type) => (\n            <option key={type} value={type}>\n              {type}\n            </option>\n          ))}\n        </select>\n      </div>\n      \n      <RoomSearch handleSearchResult={handleSearchResult} />\n      <RoomResult roomSearchResults={currentRooms} />\n\n      <Pagination\n        roomsPerPage={roomsPerPage}\n        totalRooms={filteredRooms.length}\n        currentPage={currentPage}\n        paginate={paginate}\n      />\n    </div>\n  );\n};\n\nexport default AllRoomsPage;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,UAAU,KAAM,0BAA0B,CACjD,MAAO,CAAAC,UAAU,KAAM,sBAAsB,CAC7C,MAAO,CAAAC,UAAU,KAAM,sBAAsB,CAC7C,MAAO,CAAAC,UAAU,KAAM,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAI9C,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACa,aAAa,CAAEC,gBAAgB,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAACe,SAAS,CAAEC,YAAY,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACiB,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGlB,QAAQ,CAAC,EAAE,CAAC,CAC5D,KAAM,CAACmB,WAAW,CAAEC,cAAc,CAAC,CAAGpB,QAAQ,CAAC,CAAC,CAAC,CACjD,KAAM,CAACqB,YAAY,CAAC,CAAGrB,QAAQ,CAAC,CAAC,CAAC,CAElC;AACA,KAAM,CAAAsB,kBAAkB,CAAIC,OAAO,EAAK,CACtCX,QAAQ,CAACW,OAAO,CAAC,CACjBT,gBAAgB,CAACS,OAAO,CAAC,CAC3B,CAAC,CAGDtB,SAAS,CAAC,IAAM,CACd,KAAM,CAAAuB,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAvB,UAAU,CAACwB,WAAW,CAAC,CAAC,CAC/C,KAAM,CAAAC,QAAQ,CAAGF,QAAQ,CAACG,QAAQ,CAClChB,QAAQ,CAACe,QAAQ,CAAC,CAClBb,gBAAgB,CAACa,QAAQ,CAAC,CAC5B,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAACE,OAAO,CAAC,CACvD,CACF,CAAC,CAED,KAAM,CAAAC,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CACF,KAAM,CAAAC,KAAK,CAAG,KAAM,CAAA/B,UAAU,CAACgC,YAAY,CAAC,CAAC,CAC7ClB,YAAY,CAACiB,KAAK,CAAC,CACrB,CAAE,MAAOJ,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAACE,OAAO,CAAC,CAC5D,CACF,CAAC,CAEDP,UAAU,CAAC,CAAC,CACZQ,cAAc,CAAC,CAAC,CAClB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAG,oBAAoB,CAAIC,CAAC,EAAK,CAClClB,mBAAmB,CAACkB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CACnCC,WAAW,CAACH,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAC7B,CAAC,CAED,KAAM,CAAAC,WAAW,CAAIC,IAAI,EAAK,CAC5B,GAAIA,IAAI,GAAK,EAAE,CAAE,CACf1B,gBAAgB,CAACH,KAAK,CAAC,CACzB,CAAC,IAAM,CACL,KAAM,CAAA8B,QAAQ,CAAG9B,KAAK,CAAC+B,MAAM,CAAEC,IAAI,EAAKA,IAAI,CAACC,QAAQ,GAAKJ,IAAI,CAAC,CAC/D1B,gBAAgB,CAAC2B,QAAQ,CAAC,CAC5B,CACArB,cAAc,CAAC,CAAC,CAAC,CAAE;AACrB,CAAC,CAED;AACA,KAAM,CAAAyB,eAAe,CAAG1B,WAAW,CAAGE,YAAY,CAClD,KAAM,CAAAyB,gBAAgB,CAAGD,eAAe,CAAGxB,YAAY,CACvD,KAAM,CAAA0B,YAAY,CAAGlC,aAAa,CAACmC,KAAK,CAACF,gBAAgB,CAAED,eAAe,CAAC,CAE3E;AACA,KAAM,CAAAI,QAAQ,CAAIC,UAAU,EAAK9B,cAAc,CAAC8B,UAAU,CAAC,CAE3D,mBACEzC,KAAA,QAAK0C,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxB7C,IAAA,OAAA6C,QAAA,CAAI,WAAS,CAAI,CAAC,cAClB3C,KAAA,QAAK0C,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAClC7C,IAAA,UAAA6C,QAAA,CAAO,sBAAoB,CAAO,CAAC,cACnC3C,KAAA,WAAQ6B,KAAK,CAAErB,gBAAiB,CAACoC,QAAQ,CAAElB,oBAAqB,CAAAiB,QAAA,eAC9D7C,IAAA,WAAQ+B,KAAK,CAAC,EAAE,CAAAc,QAAA,CAAC,KAAG,CAAQ,CAAC,CAC5BrC,SAAS,CAACuC,GAAG,CAAEd,IAAI,eAClBjC,IAAA,WAAmB+B,KAAK,CAAEE,IAAK,CAAAY,QAAA,CAC5BZ,IAAI,EADMA,IAEL,CACT,CAAC,EACI,CAAC,EACN,CAAC,cAENjC,IAAA,CAACF,UAAU,EAACiB,kBAAkB,CAAEA,kBAAmB,CAAE,CAAC,cACtDf,IAAA,CAACH,UAAU,EAACmD,iBAAiB,CAAER,YAAa,CAAE,CAAC,cAE/CxC,IAAA,CAACJ,UAAU,EACTkB,YAAY,CAAEA,YAAa,CAC3BmC,UAAU,CAAE3C,aAAa,CAAC4C,MAAO,CACjCtC,WAAW,CAAEA,WAAY,CACzB8B,QAAQ,CAAEA,QAAS,CACpB,CAAC,EACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAvC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}