{"ast":null,"code":"var _jsxFileName = \"/Users/daongoctung/bookinghotel/phegon-hotel-booking-and-management/frontend/src/component/auth/LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  var _location$state, _location$state$from;\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : (_location$state$from = _location$state.from) === null || _location$state$from === void 0 ? void 0 : _location$state$from.pathname) || '/home';\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validate input\n    if (!email || !password) {\n      setError('Please fill in all fields.');\n      setTimeout(() => setError(''), 5000);\n      return;\n    }\n\n    // Simulate a login process\n    // Here you can check against hardcoded credentials for demonstration\n    const mockUser = {\n      email: \"test@example.com\",\n      password: \"password123\",\n      role: \"\" // or \"admin\"\n    };\n\n    // Check the submitted email and password\n    if (email === mockUser.email && password === mockUser.password) {\n      // Simulate successful login response\n      localStorage.setItem('token', 'mockToken'); // Set a mock token\n      localStorage.setItem('role', mockUser.role); // Set the mock role\n      navigate(from, {\n        replace: true\n      }); // Redirect to the intended page\n    } else {\n      setError('Invalid email or password.');\n      setTimeout(() => setError(''), 5000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"register-link\",\n      children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/register\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginPage, \"HLFa9giwmnBuaVkJH4kzW6+KQqQ=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","useLocation","jsxDEV","_jsxDEV","LoginPage","_s","_location$state","_location$state$from","email","setEmail","password","setPassword","error","setError","navigate","location","from","state","pathname","handleSubmit","e","preventDefault","setTimeout","mockUser","role","localStorage","setItem","replace","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","href","_c","$RefreshReg$"],"sources":["/Users/daongoctung/bookinghotel/phegon-hotel-booking-and-management/frontend/src/component/auth/LoginPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nfunction LoginPage() {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    const from = location.state?.from?.pathname || '/home';\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        // Validate input\n        if (!email || !password) {\n            setError('Please fill in all fields.');\n            setTimeout(() => setError(''), 5000);\n            return;\n        }\n\n        // Simulate a login process\n        // Here you can check against hardcoded credentials for demonstration\n        const mockUser = {\n            email: \"test@example.com\",\n            password: \"password123\",\n            role: \"\" // or \"admin\"\n        };\n\n        // Check the submitted email and password\n        if (email === mockUser.email && password === mockUser.password) {\n            // Simulate successful login response\n            localStorage.setItem('token', 'mockToken'); // Set a mock token\n            localStorage.setItem('role', mockUser.role); // Set the mock role\n            navigate(from, { replace: true }); // Redirect to the intended page\n        } else {\n            setError('Invalid email or password.');\n            setTimeout(() => setError(''), 5000);\n        }\n    };\n\n    return (\n        <div className=\"auth-container\">\n            <h2>Login</h2>\n            {error && <p className=\"error-message\">{error}</p>}\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <label>Email: </label>\n                    <input\n                        type=\"email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label>Password: </label>\n                    <input\n                        type=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        required\n                    />\n                </div>\n                <button type=\"submit\">Login</button>\n            </form>\n\n            <p className=\"register-link\">\n                Don't have an account? <a href=\"/register\">Register</a>\n            </p>\n        </div>\n    );\n}\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}